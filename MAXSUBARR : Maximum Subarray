#include<iostream>
#include<algorithm>
#include<vector>
#include <climits>
typedef long long ll;
using namespace std;

ll kadane(vector<ll>& a){
    ll max_so_far = INT_MIN, max_ending_here = 0;
 
    for (int i = 0; i < a.size(); i++) {
        max_ending_here = max_ending_here + a[i];
        if (max_so_far < max_ending_here)
            max_so_far = max_ending_here;
 
        if (max_ending_here < 0)
            max_ending_here = 0;
    }
    return max_so_far;
}

void test(){
    int n,m;
    cin>>n;
    
    vector<ll> a(n), vec1(n);
    for(int i=0; i<n; i++){
        cin>>a[i];
        vec1[i]=a[i];
    }
    
    cin>>m;
    
    vector<ll> b(m), vec2(n+m);
    for(int i=0; i<m; i++){
        cin>>b[i];
        if(b[i]>0){
          vec1.push_back(b[i]);
          vec2.push_back(b[i]);
        }
    }
    for(int i=0; i<n; i++){
        vec2.push_back(a[i]);
    }
    
    ll max_sum =max(kadane(vec1),kadane(vec2));
    cout<<max_sum<<endl;
    
}

int main(){
    int t;
    cin>>t;
    while(t--){
        test();
    }
    return 0;
}
